#!/usr/bin/env python3
import os

# No randomness here
# Type 0: N/10
# Type 1: N/2
# Type 2: 3N/4
# Type 3: N

# Size, N, M, type, limit
TEST_SETS = [
    (3, 100, 1000, 0, 10), # 0
    (3, 100, 1000, 1, 50),
    (3, 100, 1000, 2, 75),
    (5, 100, 1000, 3, 100),
    (2, 1000, 1000, 0, 100),
    (2, 1000, 200000, 0, 100),
    (3, 1000, 200000, 1, 500),
    (2, 1000, 1000, 2, 750),
    (2, 1000, 200000, 2, 750),
    (2, 1000, 1000, 3, 1000),
    (2, 1000, 200000, 3, 1000), # 10
    (2, 50000, 50000, 0, 5000),
    (2, 50000, 50000, 1, 25000),
    (5, 50000, 50000, 1, 50000),
    (2, 50000, 50000, 2, 37500),
    (5, 50000, 50000, 2, 50000),
    (3, 50000, 50000, 3, 50000),
    (3, 200000, 200000, 1, 200000),
    (3, 200000, 200000, 2, 200000),
    (4, 200000, 200000, 0, 20000),
    (2, 200000, 200000, 1, 100000), # 20
    (2, 200000, 200000, 2, 150000),
    (3, 200000, 200000, 3, 200000)
]

# Number, points, groups
SUBTASKS = [
    (1, 10, [0, 1, 2, 3]),
    (2, 24, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),
    (3, 17, [0, 1, 2, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16]),
    (4, 26, [13, 15, 17, 18]),
    (5, 23, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22])
]


cnt = 0

for num, pts, groups in SUBTASKS:
    print("Subtask", num, "|", pts, "points")
    for gr in reversed(groups):
        cases, N, M, tp, lim = TEST_SETS[gr]
        for i in range(cases):
            os.system(f"echo \"{N} {M} {num} {tp} {lim} {69+i}\" | ./tkgen2 > st{num}_{cnt}.in")
            print("Generated case", cnt)
            cnt += 1
